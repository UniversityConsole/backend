#!/usr/bin/env python3

import os
import subprocess
import json

currdir = os.path.dirname(__file__)

def main():
    if (len(os.sys.argv) != 2):
        print('expected service_name')
        os.sys.exit(-1)

    service_name = os.sys.argv[1]
    cmd = 'cargo metadata --no-deps --format-version 1'
    p = subprocess.run(cmd, capture_output=True, text=True, shell=True)
    meta = json.loads(p.stdout)
    service_crate = None

    found_services = []

    for package in meta['packages']:
        if package['metadata'] == None or package['metadata']['service_name'] == None:
            continue
        if len(package['metadata']['service_name']) == 0:
            continue

        found_services.append(package['metadata']['service_name'])

        if package['metadata']['service_name'] == service_name:
            service_crate = package
            break
    
    if not service_crate:
        print(f"service does not exist. found services: {', '.join(found_services)}")
        os.sys.exit(-1)

    with open(os.path.join(os.path.dirname(__file__), 'Dockerfile.template'), 'r') as docker_template:
        content = docker_template.read() \
            .replace('__SERVICE_NAME__', service_name)

        with open(os.path.join('build', 'Dockerfile'), 'w') as dockerfile:
            dockerfile.write(content)


if __name__ == '__main__':
    main()
